spring:
  cloud:
    #/{application}/{profile}[/{label}]
    #/{application}-{profile}.yml #需要配置default-label: master
    #/{label}/{application}-{profile}.yml
    #/{application}-{profile}.properties
    #/{label}/{application}-{profile}.properties
    #如果没有环境（label)则采用default访问
    config:
      server:
        git:
          #github地址
          #uri: https://github.com/carocean/cj-geochat-config-resources.git
          uri: ${docker.spring.cloud.config.server.git.uri:https://gitee.com/carocean/cj-geochat-config-resource.git}
          skipSslValidation: true
          # github账号名
          #username: carocean
          username: ${docker.spring.cloud.config.server.git.username:carocean}
          # github账号密码
          #password: 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
          password: ${docker.spring.cloud.config.server.git.password:jofers0227}
          search-paths: ${docker.spring.cloud.config.server.git.search-paths:config}
          timeout: ${docker.spring.cloud.config.server.git.timeout:30}
          default-label: ${docker.spring.cloud.config.server.git.default-label:master}
eureka:
  client:
    register-with-eureka: true  # 是否向注册中心注册自己
    fetchRegistry: true   # 是否从注册中心抓取已有的注册信息，默认true，集群必须设置为true
    service-url:
      # 集群中各个服务注册中心的地址，实际上先一个节点即可，因为服务器集群会复制提供者信息。
      defaultZone: ${docker.geochat.EUREKA_SERVER_URL:http://localhost:8761/eureka}
  instance:
    instance-id: cj-geochat-server-config/${server.port}	 # 服务实例Id
    prefer-ip-address: true
    #调用者feign只认spring.application.name，不认此处配置应用名
    #所以不论服务提供者还是feign消费者，spring.application.name和eureka.instance.appname都配置就最好了
    #feign调用方大小写不区分，而注册中心永远显示为大写
    #eureka.instance.appname的配置名在注册中心会覆盖spring.application.name而显示，但feign认只spring.application.name
    appname: cj-geochat-server-config
    #注册中心点状态跳转到swagger
    status-page-url: http://${spring.cloud.client.ip-address}:${server.port}${server.servlet.context-path}doc.html
